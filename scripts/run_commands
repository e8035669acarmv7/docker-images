#!/bin/bash -il

set -exo pipefail

export additional_channel="--add channels e8035669acarmv7"

# export miniforge_arch="$(uname -m)"
# export miniforge_version="22.9.0-0"
export python_version="3.10"  # should match the one provided in mambaforge
# export condapkg="https://github.com/conda-forge/miniforge/releases/download/${miniforge_version}/Mambaforge-${miniforge_version}-Linux-${miniforge_arch}.sh"
# if [ "$(uname -m)" = "x86_64" ]; then
#    export conda_chksum="7049f5ebdd6e2aee7611874599ab14445cd63070cdb63db2e00ae0b90d7c6132"
# elif [ "$(uname -m)" = "ppc64le" ]; then
#    export conda_chksum="a17530e0e981991db5f6875e949dc22554f2ed0dd2b1bbb40ce677c910a2dc51"
# elif [ "$(uname -m)" = "aarch64" ]; then
#    export conda_chksum="6076cfb0c2f88efa3e5e125dc54f3c0f8219cfe1ae9d9258a5abe42dbcf21a13"
# else
#    exit 1
# fi
export condapkg="https://github.com/e8035669/conda_cross/releases/download/v1.0.4/mamba4arm-1.0.4-py310-Linux-armv7l.sh"
export conda_chksum="73cea227344db3be71c37a15da85b473e9fbacf90a173aa6bf1e54e63d3b61d5"

# give sudo permission for conda user to run yum (user creation is postponed
# to the entrypoint, so we can create a user with the same id as the host)
echo 'conda ALL=NOPASSWD: /usr/bin/yum' >> /etc/sudoers
# give sudo permission to copy the cuda headers and libraries for cross compilation
echo 'conda ALL=NOPASSWD: /usr/bin/cp -r /opt/conda/targets/x86_64-linux /usr/local/cuda/targets/x86_64-linux' >> /etc/sudoers
echo 'conda ALL=NOPASSWD: /usr/bin/cp -r /opt/conda/targets/ppc64le-linux /usr/local/cuda/targets/ppc64le-linux' >> /etc/sudoers
echo 'conda ALL=NOPASSWD: /usr/bin/cp -r /opt/conda/targets/sbsa-linux /usr/local/cuda/targets/sbsa-linux' >> /etc/sudoers

# Install the latest Miniconda with Python 3 and update everything.
curl -s -L $condapkg > miniconda.sh
sha256sum miniconda.sh | grep $conda_chksum

bash miniconda.sh -b -p /opt/conda
rm -f miniconda.sh

# Work around TLS issues while updating conda's python and retrieving channel notices
export CONDA_NUMBER_CHANNEL_NOTICES="0"
touch /opt/conda/conda-meta/pinned
ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
source /opt/conda/etc/profile.d/conda.sh
conda activate
conda config --set show_channel_urls True
conda config --set channel_priority strict
# conda config ${additional_channel} --add channels conda-forge
conda config --show-sources

# Update everything first
# mamba update --yes --all
conda update --yes --all

# Ensure conda build, deployment and docker tools ar present
# mamba install --yes --quiet \
conda install --yes --quiet \
    "python=$python_version" \
    git \
    patch \
    pip \
    conda-build \
    boa \
    anaconda-client \
    su-exec \
    tini

# Clean to reduce image size
conda clean -tipy

# Install docker tools
export CONDA_SUEXEC_INFO=( `conda list su-exec | grep su-exec` )
echo "su-exec ${CONDA_SUEXEC_INFO[1]}" >> /opt/conda/conda-meta/pinned
export CONDA_TINI_INFO=( `conda list tini | grep tini` )
echo "tini ${CONDA_TINI_INFO[1]}" >> /opt/conda/conda-meta/pinned

# Lucky group gets permission to write in the conda dir
groupadd -g 32766 lucky
chown -R $USER /opt/conda
chgrp -R lucky /opt/conda && chmod -R g=u /opt/conda
